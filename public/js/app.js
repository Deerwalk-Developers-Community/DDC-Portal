/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// require('./bootstrap');\n__webpack_require__(/*! ./home */ \"./resources/js/home.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0FBLG1CQUFPLENBQUMsc0NBQUQsQ0FBUCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9hcHAuanM/Y2VkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZXF1aXJlKCcuL2Jvb3RzdHJhcCcpO1xyXG5yZXF1aXJlKCcuL2hvbWUnKTsiXSwibmFtZXMiOlsicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/js/home.js":
/*!******************************!*\
  !*** ./resources/js/home.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\r\n * classie - class helper functions\r\n * from bonzo https://github.com/ded/bonzo\r\n *\r\n * classie.has( elem, 'my-class' ) -> true/false\r\n * classie.add( elem, 'my-new-class' )\r\n * classie.remove( elem, 'my-unwanted-class' )\r\n * classie.toggle( elem, 'my-class' )\r\n */\n\n/*jshint browser: true, strict: true, undef: true */\n\n/*global define: false */\n(function (window) {\n  'use strict'; // class helper functions from bonzo https://github.com/ded/bonzo\n\n  function classReg(className) {\n    return new RegExp('(^|\\\\s+)' + className + '(\\\\s+|$)');\n  } // classList support for class management\n  // altho to be fair, the api sucks because it won't accept multiple classes at once\n\n\n  var hasClass, addClass, removeClass;\n\n  if ('classList' in document.documentElement) {\n    hasClass = function hasClass(elem, c) {\n      return elem.classList.contains(c);\n    };\n\n    addClass = function addClass(elem, c) {\n      elem.classList.add(c);\n    };\n\n    removeClass = function removeClass(elem, c) {\n      elem.classList.remove(c);\n    };\n  } else {\n    hasClass = function hasClass(elem, c) {\n      return classReg(c).test(elem.className);\n    };\n\n    addClass = function addClass(elem, c) {\n      if (!hasClass(elem, c)) {\n        elem.className = elem.className + ' ' + c;\n      }\n    };\n\n    removeClass = function removeClass(elem, c) {\n      elem.className = elem.className.replace(classReg(c), ' ');\n    };\n  }\n\n  function toggleClass(elem, c) {\n    var fn = hasClass(elem, c) ? removeClass : addClass;\n    fn(elem, c);\n  }\n\n  var classie = {\n    // full names\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    // short names\n    has: hasClass,\n    add: addClass,\n    remove: removeClass,\n    toggle: toggleClass\n  }; // transport\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (classie),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window); // ___modernizer\n\n/* Modernizr 2.6.2 (Custom Build) | MIT & BSD\r\n * Build: http://modernizr.com/download/#-csstransforms3d-shiv-cssclasses-teststyles-testprop-testallprops-prefixes-domprefixes-load\r\n */\n\n\nwindow.Modernizr = function (a, b, c) {\n  function z(a) {\n    j.cssText = a;\n  }\n\n  function A(a, b) {\n    return z(m.join(a + ';') + (b || ''));\n  }\n\n  function B(a, b) {\n    return _typeof(a) === b;\n  }\n\n  function C(a, b) {\n    return !!~('' + a).indexOf(b);\n  }\n\n  function D(a, b) {\n    for (var d in a) {\n      var e = a[d];\n      if (!C(e, '-') && j[e] !== c) return b == 'pfx' ? e : !0;\n    }\n\n    return !1;\n  }\n\n  function E(a, b, d) {\n    for (var e in a) {\n      var f = b[a[e]];\n      if (f !== c) return d === !1 ? a[e] : B(f, 'function') ? f.bind(d || b) : f;\n    }\n\n    return !1;\n  }\n\n  function F(a, b, c) {\n    var d = a.charAt(0).toUpperCase() + a.slice(1),\n        e = (a + ' ' + o.join(d + ' ') + d).split(' ');\n    return B(b, 'string') || B(b, 'undefined') ? D(e, b) : (e = (a + ' ' + p.join(d + ' ') + d).split(' '), E(e, b, c));\n  }\n\n  var d = '2.6.2',\n      e = {},\n      f = !0,\n      //     g = b.documentElement,\n  h = 'modernizr',\n      //     i = b.createElement(h),\n  //     j = i.style,\n  k,\n      l = {}.toString,\n      m = ' -webkit- -moz- -o- -ms- '.split(' '),\n      n = 'Webkit Moz O ms',\n      o = n.split(' '),\n      p = n.toLowerCase().split(' '),\n      q = {},\n      r = {},\n      s = {},\n      t = [],\n      u = t.slice,\n      v,\n      w = function w(a, c, d, e) {\n    var f,\n        i,\n        j,\n        k,\n        l = b.createElement('div'),\n        m = b.body,\n        n = m || b.createElement('body');\n    if (parseInt(d, 10)) while (d--) {\n      j = b.createElement('div'), j.id = e ? e[d] : h + (d + 1), l.appendChild(j);\n    }\n    return f = ['&#173;', '<style id=\"s', h, '\">', a, '</style>'].join(''), l.id = h, (m ? l : n).innerHTML += f, n.appendChild(l), m || (n.style.background = '', n.style.overflow = 'hidden', k = g.style.overflow, g.style.overflow = 'hidden', g.appendChild(n)), i = c(l, a), m ? l.parentNode.removeChild(l) : (n.parentNode.removeChild(n), g.style.overflow = k), !!i;\n  },\n      x = {}.hasOwnProperty,\n      y;\n\n  !B(x, 'undefined') && !B(x.call, 'undefined') ? y = function y(a, b) {\n    return x.call(a, b);\n  } : y = function y(a, b) {\n    return b in a && B(a.constructor.prototype[b], 'undefined');\n  }, Function.prototype.bind || (Function.prototype.bind = function (b) {\n    var c = this;\n    if (typeof c != 'function') throw new TypeError();\n\n    var d = u.call(arguments, 1),\n        e = function e() {\n      if (this instanceof e) {\n        var a = function a() {};\n\n        a.prototype = c.prototype;\n        var f = new a(),\n            g = c.apply(f, d.concat(u.call(arguments)));\n        return Object(g) === g ? g : f;\n      }\n\n      return c.apply(b, d.concat(u.call(arguments)));\n    };\n\n    return e;\n  }), q.csstransforms3d = function () {\n    var a = !!F('perspective');\n    return a && 'webkitPerspective' in g.style && w('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function (b, c) {\n      a = b.offsetLeft === 9 && b.offsetHeight === 3;\n    }), a;\n  };\n\n  for (var G in q) {\n    y(q, G) && (v = G.toLowerCase(), e[v] = q[G](), t.push((e[v] ? '' : 'no-') + v));\n  }\n\n  return e.addTest = function (a, b) {\n    if (_typeof(a) == 'object') for (var d in a) {\n      y(a, d) && e.addTest(d, a[d]);\n    } else {\n      a = a.toLowerCase();\n      if (e[a] !== c) return e;\n      b = typeof b == 'function' ? b() : b, typeof f != 'undefined' && f && (g.className += ' ' + (b ? '' : 'no-') + a), e[a] = b;\n    }\n    return e;\n  }, z(''), i = k = null, function (a, b) {\n    function k(a, b) {\n      var c = a.createElement('p'),\n          d = a.getElementsByTagName('head')[0] || a.documentElement;\n      return c.innerHTML = 'x<style>' + b + '</style>', d.insertBefore(c.lastChild, d.firstChild);\n    }\n\n    function l() {\n      var a = r.elements;\n      return typeof a == 'string' ? a.split(' ') : a;\n    }\n\n    function m(a) {\n      var b = i[a[g]];\n      return b || (b = {}, h++, a[g] = h, i[h] = b), b;\n    }\n\n    function n(a, c, f) {\n      c || (c = b);\n      if (j) return c.createElement(a);\n      f || (f = m(c));\n      var g;\n      return f.cache[a] ? g = f.cache[a].cloneNode() : e.test(a) ? g = (f.cache[a] = f.createElem(a)).cloneNode() : g = f.createElem(a), g.canHaveChildren && !d.test(a) ? f.frag.appendChild(g) : g;\n    }\n\n    function o(a, c) {\n      a || (a = b);\n      if (j) return a.createDocumentFragment();\n      c = c || m(a);\n      var d = c.frag.cloneNode(),\n          e = 0,\n          f = l(),\n          g = f.length;\n\n      for (; e < g; e++) {\n        d.createElement(f[e]);\n      }\n\n      return d;\n    }\n\n    function p(a, b) {\n      b.cache || (b.cache = {}, b.createElem = a.createElement, b.createFrag = a.createDocumentFragment, b.frag = b.createFrag()), a.createElement = function (c) {\n        return r.shivMethods ? n(c, a, b) : b.createElem(c);\n      }, a.createDocumentFragment = Function('h,f', 'return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(' + l().join().replace(/\\w+/g, function (a) {\n        return b.createElem(a), b.frag.createElement(a), 'c(\"' + a + '\")';\n      }) + ');return n}')(r, b.frag);\n    }\n\n    function q(a) {\n      a || (a = b);\n      var c = m(a);\n      return r.shivCSS && !f && !c.hasCSS && (c.hasCSS = !!k(a, 'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}')), j || p(a, c), a;\n    }\n\n    var c = a.html5 || {},\n        d = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,\n        e = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,\n        f,\n        g = '_html5shiv',\n        h = 0,\n        i = {},\n        j;\n\n    (function () {\n      try {\n        var a = b.createElement('a');\n        a.innerHTML = '<xyz></xyz>', f = 'hidden' in a, j = a.childNodes.length == 1 || function () {\n          b.createElement('a');\n          var a = b.createDocumentFragment();\n          return typeof a.cloneNode == 'undefined' || typeof a.createDocumentFragment == 'undefined' || typeof a.createElement == 'undefined';\n        }();\n      } catch (c) {\n        f = !0, j = !0;\n      }\n    })();\n\n    var r = {\n      elements: c.elements || 'abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video',\n      shivCSS: c.shivCSS !== !1,\n      supportsUnknownElements: j,\n      shivMethods: c.shivMethods !== !1,\n      type: 'default',\n      shivDocument: q,\n      createElement: n,\n      createDocumentFragment: o\n    };\n    a.html5 = r, q(b);\n  }(this, b), e._version = d, e._prefixes = m, e._domPrefixes = p, e._cssomPrefixes = o, e.testProp = function (a) {\n    return D([a]);\n  }, e.testAllProps = F, e.testStyles = w, g.className = g.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') + (f ? ' js ' + t.join(' ') : ''), e;\n}(this, this.document), function (a, b, c) {\n  function d(a) {\n    return '[object Function]' == o.call(a);\n  }\n\n  function e(a) {\n    return 'string' == typeof a;\n  }\n\n  function f() {}\n\n  function g(a) {\n    return !a || 'loaded' == a || 'complete' == a || 'uninitialized' == a;\n  }\n\n  function h() {\n    var a = p.shift();\n    q = 1, a ? a.t ? m(function () {\n      ('c' == a.t ? _B.injectCss : _B.injectJs)(a.s, 0, a.a, a.x, a.e, 1);\n    }, 0) : (a(), h()) : q = 0;\n  }\n\n  function i(a, c, d, e, f, i, j) {\n    function k(b) {\n      if (!o && g(l.readyState) && (u.r = o = 1, !q && h(), l.onload = l.onreadystatechange = null, b)) {\n        'img' != a && m(function () {\n          t.removeChild(l);\n        }, 50);\n\n        for (var d in y[c]) {\n          y[c].hasOwnProperty(d) && y[c][d].onload();\n        }\n      }\n    }\n\n    var j = j || _B.errorTimeout,\n        l = b.createElement(a),\n        o = 0,\n        r = 0,\n        u = {\n      t: d,\n      s: c,\n      e: f,\n      a: i,\n      x: j\n    };\n    1 === y[c] && (r = 1, y[c] = []), 'object' == a ? l.data = c : (l.src = c, l.type = a), l.width = l.height = '0', l.onerror = l.onload = l.onreadystatechange = function () {\n      k.call(this, r);\n    }, p.splice(e, 0, u), 'img' != a && (r || 2 === y[c] ? (t.insertBefore(l, s ? null : n), m(k, j)) : y[c].push(l));\n  }\n\n  function j(a, b, c, d, f) {\n    return q = 0, b = b || 'j', e(a) ? i('c' == b ? v : u, a, b, this.i++, c, d, f) : (p.splice(this.i++, 0, a), 1 == p.length && h()), this;\n  }\n\n  function k() {\n    var a = _B;\n    return a.loader = {\n      load: j,\n      i: 0\n    }, a;\n  }\n\n  var l = b.documentElement,\n      m = a.setTimeout,\n      n = b.getElementsByTagName('script')[0],\n      o = {}.toString,\n      p = [],\n      q = 0,\n      r = ('MozAppearance' in l.style),\n      s = r && !!b.createRange().compareNode,\n      t = s ? l : n.parentNode,\n      l = a.opera && '[object Opera]' == o.call(a.opera),\n      l = !!b.attachEvent && !l,\n      u = r ? 'object' : l ? 'script' : 'img',\n      v = l ? 'script' : u,\n      w = Array.isArray || function (a) {\n    return '[object Array]' == o.call(a);\n  },\n      x = [],\n      y = {},\n      z = {\n    timeout: function timeout(a, b) {\n      return b.length && (a.timeout = b[0]), a;\n    }\n  },\n      _A,\n      _B;\n\n  _B = function B(a) {\n    function b(a) {\n      var a = a.split('!'),\n          b = x.length,\n          c = a.pop(),\n          d = a.length,\n          c = {\n        url: c,\n        origUrl: c,\n        prefixes: a\n      },\n          e,\n          f,\n          g;\n\n      for (f = 0; f < d; f++) {\n        g = a[f].split('='), (e = z[g.shift()]) && (c = e(c, g));\n      }\n\n      for (f = 0; f < b; f++) {\n        c = x[f](c);\n      }\n\n      return c;\n    }\n\n    function g(a, e, f, g, h) {\n      var i = b(a),\n          j = i.autoCallback;\n      i.url.split('.').pop().split('?').shift(), i.bypass || (e && (e = d(e) ? e : e[a] || e[g] || e[a.split('/').pop().split('?')[0]]), i.instead ? i.instead(a, e, f, g, h) : (y[i.url] ? i.noexec = !0 : y[i.url] = 1, f.load(i.url, i.forceCSS || !i.forceJS && 'css' == i.url.split('.').pop().split('?').shift() ? 'c' : c, i.noexec, i.attrs, i.timeout), (d(e) || d(j)) && f.load(function () {\n        k(), e && e(i.origUrl, h, g), j && j(i.origUrl, h, g), y[i.url] = 2;\n      })));\n    }\n\n    function h(a, b) {\n      function c(a, c) {\n        if (a) {\n          if (e(a)) c || (j = function j() {\n            var a = [].slice.call(arguments);\n            k.apply(this, a), l();\n          }), g(a, j, b, 0, h);else if (Object(a) === a) for (n in m = function () {\n            var b = 0,\n                c;\n\n            for (c in a) {\n              a.hasOwnProperty(c) && b++;\n            }\n\n            return b;\n          }(), a) {\n            a.hasOwnProperty(n) && (!c && ! --m && (d(j) ? j = function j() {\n              var a = [].slice.call(arguments);\n              k.apply(this, a), l();\n            } : j[n] = function (a) {\n              return function () {\n                var b = [].slice.call(arguments);\n                a && a.apply(this, b), l();\n              };\n            }(k[n])), g(a[n], j, b, n, h));\n          }\n        } else !c && l();\n      }\n\n      var h = !!a.test,\n          i = a.load || a.both,\n          j = a.callback || f,\n          k = j,\n          l = a.complete || f,\n          m,\n          n;\n      c(h ? a.yep : a.nope, !!i), i && c(i);\n    }\n\n    var i,\n        j,\n        l = this.yepnope.loader;\n    if (e(a)) g(a, 0, l, 0);else if (w(a)) for (i = 0; i < a.length; i++) {\n      j = a[i], e(j) ? g(j, 0, l, 0) : w(j) ? _B(j) : Object(j) === j && h(j, l);\n    } else Object(a) === a && h(a, l);\n  }, _B.addPrefix = function (a, b) {\n    z[a] = b;\n  }, _B.addFilter = function (a) {\n    x.push(a);\n  }, _B.errorTimeout = 1e4, null == b.readyState && b.addEventListener && (b.readyState = 'loading', b.addEventListener('DOMContentLoaded', _A = function A() {\n    b.removeEventListener('DOMContentLoaded', _A, 0), b.readyState = 'complete';\n  }, 0)), a.yepnope = k(), a.yepnope.executeStack = h, a.yepnope.injectJs = function (a, c, d, e, i, j) {\n    var k = b.createElement('script'),\n        l,\n        o,\n        e = e || _B.errorTimeout;\n    k.src = a;\n\n    for (o in d) {\n      k.setAttribute(o, d[o]);\n    }\n\n    c = j ? h : c || f, k.onreadystatechange = k.onload = function () {\n      !l && g(k.readyState) && (l = 1, c(), k.onload = k.onreadystatechange = null);\n    }, m(function () {\n      l || (l = 1, c(1));\n    }, e), i ? k.onload() : n.parentNode.insertBefore(k, n);\n  }, a.yepnope.injectCss = function (a, c, d, e, g, i) {\n    var e = b.createElement('link'),\n        j,\n        c = i ? h : c || f;\n    e.href = a, e.rel = 'stylesheet', e.type = 'text/css';\n\n    for (j in d) {\n      e.setAttribute(j, d[j]);\n    }\n\n    g || (n.parentNode.insertBefore(e, n), m(c, 0));\n  };\n}(this, document), Modernizr.load = function () {\n  yepnope.apply(window, [].slice.call(arguments, 0));\n}; // sidebar effect\n\n/**\r\n * sidebarEffects.js v1.0.0\r\n * http://www.codrops.com\r\n *\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n *\r\n * Copyright 2013, Codrops\r\n * http://www.codrops.com\r\n */\n\nvar SidebarMenuEffects = function () {\n  function hasParentClass(e, classname) {\n    if (e === document) return false;\n\n    if (classie.has(e, classname)) {\n      return true;\n    }\n\n    return e.parentNode && hasParentClass(e.parentNode, classname);\n  } // http://coveroverflow.com/a/11381730/989439\n\n\n  function mobilecheck() {\n    var check = false;\n\n    (function (a) {\n      if (/(android|ipad|playbook|silk|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n\n    return check;\n  }\n\n  function init() {\n    var container = document.getElementById('st-container'),\n        reset = document.getElementById('closeMenu'),\n        buttons = Array.prototype.slice.call(document.querySelectorAll('#st-trigger-effects > button')),\n        // event type (if mobile use touch events)\n    eventtype = mobilecheck() ? 'touchstart' : 'click',\n        resetMenu = function resetMenu() {\n      classie.remove(container, 'st-menu-open');\n    },\n        bodyClickFn = function bodyClickFn(evt) {\n      if (!hasParentClass(evt.target, 'st-menu')) {\n        resetMenu();\n        document.removeEventListener(eventtype, bodyClickFn);\n      }\n    },\n        resetClickFn = function resetClickFn(evt) {\n      if (evt.target == reset) {\n        resetMenu();\n        document.removeEventListener(eventtype, bodyClickFn);\n      }\n    };\n\n    buttons.forEach(function (el, i) {\n      var effect = el.getAttribute('data-effect');\n      el.addEventListener(eventtype, function (ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        container.className = 'st-container'; // clear\n\n        classie.add(container, effect);\n        setTimeout(function () {\n          classie.add(container, 'st-menu-open');\n        }, 25);\n        document.addEventListener(eventtype, bodyClickFn);\n        document.addEventListener(eventtype, resetClickFn);\n      });\n    });\n  }\n\n  init();\n}(); // custom  cursor\n// UPDATE: I was able to get this working again... Enjoy!\n\n\nvar cursor = document.querySelector('.cursor');\nvar cursorinner = document.querySelector('.cursor2');\nvar a = document.querySelectorAll('a');\ndocument.addEventListener('mousemove', function (e) {\n  var x = e.clientX;\n  var y = e.clientY;\n  cursor.style.transform = \"translate3d(calc(\".concat(e.clientX, \"px - 50%), calc(\").concat(e.clientY, \"px - 50%), 0)\");\n});\ndocument.addEventListener('mousemove', function (e) {\n  var x = e.clientX;\n  var y = e.clientY;\n  cursorinner.style.left = x + 'px';\n  cursorinner.style.top = y + 'px';\n});\ndocument.addEventListener('mousedown', function () {\n  cursor.classList.add('click');\n  cursorinner.classList.add('cursorinnerhover');\n});\ndocument.addEventListener('mouseup', function () {\n  cursor.classList.remove('click');\n  cursorinner.classList.remove('cursorinnerhover');\n});\na.forEach(function (item) {\n  item.addEventListener('mouseover', function () {\n    cursor.classList.add('hover');\n  });\n  item.addEventListener('mouseleave', function () {\n    cursor.classList.remove('hover');\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/home.js\n");

/***/ }),

/***/ "./resources/sass/main.scss":
/*!**********************************!*\
  !*** ./resources/sass/main.scss ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9tYWluLnNjc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3Nhc3MvbWFpbi5zY3NzP2U4ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sass/main.scss\n");

/***/ }),

/***/ "./resources/css/admin.css":
/*!*********************************!*\
  !*** ./resources/css/admin.css ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL2FkbWluLmNzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvY3NzL2FkbWluLmNzcz82MTRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/css/admin.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/admin": 0,
/******/ 			"css/main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/admin","css/main"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	__webpack_require__.O(undefined, ["css/admin","css/main"], () => (__webpack_require__("./resources/sass/main.scss")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/admin","css/main"], () => (__webpack_require__("./resources/css/admin.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;